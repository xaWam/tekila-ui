<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"

      xmlns:c="http://java.sun.com/jsp/jstl/core">

<!--
    Replace path to template, title, header and body
    with actual data.
-->
<f:metadata>
    <f:viewParam name="subscription" value="#{subscriptionManager.subscriptionID}"/>
    <f:viewParam name="subscriber" value="#{subscriptionManager.subscriberID}"/>
    <f:event type="preRenderView" listener="#{subscriptionManager.onPageLoad}"/>
</f:metadata>
<ui:composition template="/template_admin.xhtml">
    <ui:define name="pageTitle">Subscription #{subscriptionManager.selected.agreement} - View/Edit</ui:define>
    <ui:define name="content">
        <h:form id="sbForm" onkeypress="return event.keyCode != 13;">
            <p:growl id="messages" severity="info,warn,error,fatal" showDetail="true"/>
            <p:accordionPanel activeIndex="0" dynamic="true" multiple="true" cache="true" id="accordionPanel">
                <p:tab title="Details &amp; Balance">
                    <h:panelGrid id="sbnInfo" columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">
                        <f:facet name="header">
                            <h:outputText value="Subscription #{subscriptionManager.selected.agreement}"/>
                        </f:facet>
                        <h:outputLabel value="Subscriber name" for="subName"/>
                        <h:outputText
                                rendered="#{subscriptionManager.selected.subscriber.details.type.typeName eq 'Individual'}"
                                value="#{subscriptionManager.selected.subscriber.details.firstName}
                                          #{subscriptionManager.selected.subscriber.details.middleName}
                                          #{subscriptionManager.selected.subscriber.details.surname}"
                                id="subName"/>
                        <h:outputText
                                rendered="#{subscriptionManager.selected.subscriber.details.type.typeName eq 'Corporate'}"
                                value="#{subscriptionManager.selected.subscriber.details.companyName}"
                                id="compName"/>

                        <h:outputLabel for="subscriptionName" value="Subscription name"/>
                        <p:inplace id="subscriptionName" editor="true" emptyLabel="N/A">
                           <p:inputText value="#{subscriptionManager.selected.details.name}" label="text" />
                        </p:inplace>

                        <h:outputLabel for="subscriptionSurname" value="Subscription surname"/>
                        <p:inplace id="subscriptionSurname" editor="true" emptyLabel="N/A">
                            <p:inputText value="#{subscriptionManager.selected.details.surname}" label="text" />
                        </p:inplace>

                        <h:outputLabel value="Address" for="subAddress"/>
                        <h:outputText value="#{subscriptionManager.subscriptionAddress}"
                                      id="subAddress"/>

                        <h:outputLabel value="Agreement"/>
                        <h:outputText value="#{subscriptionManager.selected.agreement}"/>

                        <h:outputLabel value="Identifier"
                                       rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'POSTPAID'}"/>
                        <h:outputText value="#{subscriptionManager.selected.identifier}"
                                      rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'POSTPAID'}"/>

                        <h:outputLabel value="Status"/>

                        <p:outputPanel id="sbnStatus">

                            <h:outputText id="statusR" value="#{subscriptionManager.selected.status}"
                                          rendered="#{not (uISecurityManager.hasPermission('Subscription', 'UPDATE')
                                                    and uISecurityManager.hasPermission('SubscriptionStatusChange', 'UPDATE'))}"/>

                            <script type="text/javascript">
                                function showStatusChangeDialog(data) {
                                    if (data.status == 'success') {
                                        PF('statusChangeDialog').show();
                                    }
                                }
                            </script>

                         <p:commandButton id="subscriptinActivate" rendered="#{uISecurityManager.hasPermission('SubscriptionActivate', 'UPDATE') and subscriptionManager.selected.status eq 'INITIAL'}" value="Activate" type="button" onclick="PF('manualActivateDialog').show();"/>


                         <p:inplace id="statusWU"
                                       rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE') and subscriptionManager.selected.status ne 'INITIAL' and uISecurityManager.hasPermission('SubscriptionStatusChange', 'UPDATE')}">
                                <f:facet name="output">
                                    <h:outputText value="#{subscriptionManager.selected.status}"/>
                                </f:facet>
                                <f:facet name="input">
                                    <p:selectOneMenu value="#{subscriptionManager.selectedStatus}" id="statusSelectU"
                                                     widgetVar="statusSelect">
                                        <f:ajax listener="#{subscriptionManager.onStatusChange}"
                                                render=":sbForm:messages statusSelectU"/>
                                        <f:selectItems value="#{subscriptionManager.subscriptionStatusList}"/>
                                    </p:selectOneMenu>
                                </f:facet>
                        </p:inplace>
   

                        <p:spacer width="30" height="0"
                                      rendered="#{(subscriptionManager.selected.service.provider.id eq subscriptionManager.citynetProviderId or
                                                            subscriptionManager.selected.service.provider.id eq subscriptionManager.uninetProviderId)
                                                            and (subscriptionManager.selected.status eq 'FINAL'
                                                            or subscriptionManager.selected.status eq 'CANCEL')
                                                            and uISecurityManager.hasPermission('Subscription', 'UPDATE')
                                                            and uISecurityManager.hasPermission('SubscriptionStatusChange', 'UPDATE')}"/>
                            <p:commandButton value="Restore"
                                             action="#{subscriptionManager.restoreToInitial}"
                                             rendered="#{(subscriptionManager.selected.service.provider.id eq subscriptionManager.citynetProviderId or
                                                            subscriptionManager.selected.service.provider.id eq subscriptionManager.uninetProviderId)
                                                                and (subscriptionManager.selected.status eq 'FINAL'
                                                                or subscriptionManager.selected.status eq 'CANCEL')
                                                                and uISecurityManager.hasPermission('Subscription', 'UPDATE')
                                                                and uISecurityManager.hasPermission('SubscriptionStatusChange', 'UPDATE')}"
                                             oncomplete="if(args.restored)location.reload(true);"
                                             update=":sbForm:messages"/>
                        </p:outputPanel>

                        <h:outputLabel>Tariff plan</h:outputLabel>
                        <p:outputPanel id="tarifPanel">
                            <h:outputText value="#{subscriptionManager.selected.service.name}"
                                          rendered="#{not uISecurityManager.hasPermission('Subscription', 'UPDATE')}"/>

                            <p:commandLink value="#{subscriptionManager.selected.service.name}"
                                           onclick="PF('serviceChangeDialog').show(); return false;"
                                           rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                           id="tarifName" update="tarifName"/>
                        </p:outputPanel>
                        <h:outputLabel value="Service type"/>
                        <h:outputText value="ADSL"/>

                        <h:outputLabel value="Billing Model"/>
                        <p:inplace emptyLabel="None">
                            <f:facet name="output">
                                <h:outputText
                                        value="#{not empty subscriptionManager.selected.billingModel ? subscriptionManager.selected.billingModel.name : 'None'}"/>
                            </f:facet>
                            <f:facet name="input">
                                <p:selectOneMenu value="#{subscriptionManager.selected.billingModel}"
                                                 converter="#{billingModelConverter}">
                                    <f:selectItems value="#{subscriptionManager.billingModelList}" var="md"
                                                   itemLabel="#{md.name}" itemValue="#{md}"/>
                                </p:selectOneMenu>
                            </f:facet>
                        </p:inplace>

                        <h:outputLabel value="Service provider"/>
                        <h:outputText value="#{subscriptionManager.selected.service.provider.name}"/>
                        
                        <h:outputLabel value="Language"/>
                        <p:inplace>
                            <f:facet name="output">
                                <h:outputText value="#{subscriptionManager.selected.details.language}"/>
                            </f:facet>
                            <f:facet name="input">
                                <p:selectOneMenu value="#{subscriptionManager.selected.details.language}">
                                    <f:selectItems value="#{subscriptionManager.languageList}"/>
                                </p:selectOneMenu>
                            </f:facet>
                        </p:inplace>

                        <h:outputLabel>Price</h:outputLabel>
                        <h:outputText value="#{subscriptionManager.selected.subscriber.lifeCycle eq 'POSTPAID' ?
                                                   subscriptionManager.selected.serviceFeeRateForView : subscriptionManager.selected.service.servicePriceInDouble}"></h:outputText>

                        <h:outputLabel for="subscriptionCreateDate" value="Created on"/>
                        <h:outputText id="subscriptionCreateDate" value="#{subscriptionManager.selected.creationDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionActivationDate" value="Activated on"/>
                        <h:outputText id="subscriptionActivationDate"
                                      rendered="#{not uISecurityManager.hasPermission('SubscriptionActivationDate', 'UPDATE')}"
                                      value="#{subscriptionManager.selected.activationDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <p:inplace id="subscriptionActivationDateS" editor="true" rendered="#{uISecurityManager.hasPermission('SubscriptionActivationDate', 'UPDATE')}">
                           <p:calendar value="#{subscriptionManager.selected.activationDateAsDate}" label="text" pattern="dd.MM.yyyy HH:mm:ss">
                              <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                           </p:calendar>
                        </p:inplace>

                        <h:outputLabel for="subscriptionPaymentDate" value="Last payment on"/>
                        <h:outputText id="subscriptionPaymentDate"
                                      value="#{subscriptionManager.selected.lastPaymentDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionExpDate" value="Expires on"/>
                        <h:outputText id="subscriptionExpDate" value="#{subscriptionManager.selected.expiresAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionExpDateWithGrace" value="Expires on (with Grace Period)"/>
                        <h:outputText id="subscriptionExpDateWithGrace"
                                      value="#{subscriptionManager.selected.expirationDateWithGracePeriodAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionStatusChangeDate" value="Last status changed on"/>
                        <h:outputText id="subscriptionStatusChangeDate"
                                      value="#{subscriptionManager.selected.lastStatusChangeAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionBillDate" value="Billed UpTo"/>
                        <h:outputText id="subscriptionBillDate"
                                      value="#{subscriptionManager.selected.billedUpToDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Created by"/>
                        <h:outputText
                                value="#{subscriptionManager.selected.user ne null ? subscriptionManager.selected.user.userName : '-'}"/>
                        <h:outputLabel value="Comment" for="comment"/>
                        <p:inplace emptyLabel="None" event="click">
                            <p:editor id="comment" value="#{subscriptionManager.selected.details.comments}"
                                      width="1000" height="200"/>
                        </p:inplace>
                        <h:outputLabel value="Payment type" />
                        <p:inplace emptyLabel="None" event="click">
                            <p:selectOneMenu value="#{subscriptionManager.selected.paymentType}">
                                <f:selectItems value="#{subscriptionManager.paymentTypes}" />
                            </p:selectOneMenu>
                        </p:inplace>
                    </h:panelGrid>

                    <h:panelGrid id="discountGrid" columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row" style="margin-bottom: 15px;"
                                 rendered="#{uISecurityManager.hasPermission('SubscriptionDiscount', 'INSERT')}">
                        <f:facet name="header">
                            <h:outputText value="Discount category"/>
                        </f:facet>

                        <h:outputLabel value="Discount"/>
                        <h:selectBooleanCheckbox id="discountEnabled" value="#{subscriptionManager.selected.discountEnabled}"
                                                 disabled="#{subscriptionManager.selected.taxFreeEnabled}">
                            <p:ajax event="change" update="@form"/>
                        </h:selectBooleanCheckbox>

                        <h:outputLabel value="Tax Free"/>
                        <h:selectBooleanCheckbox id="taxFree" value="#{subscriptionManager.selected.taxFreeEnabled}"
                                                 disabled="#{subscriptionManager.selected.discountEnabled}">
                            <p:ajax event="change" update="@form"/>
                        </h:selectBooleanCheckbox>

                        <h:outputLabel value="Discount Percentage"/>
                        <h:inputText value="#{subscriptionManager.selected.discountPercentage}"
                                     disabled="#{not (subscriptionManager.selected.discountEnabled or subscriptionManager.selected.taxFreeEnabled)}"/>
                    </h:panelGrid>

                    <h:panelGrid columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">
                        <f:facet name="header">Balance</f:facet>
                        <h:outputLabel value="Real" for="realBalance"/>
                        <h:outputText value="#{subscriptionManager.selected.balance.realBalanceForView}"
                                      id="realBalance"/>
                        <h:outputLabel value="Promo balance" for="promoBalance"/>
                        <h:outputText value="#{subscriptionManager.selected.balance.promoBalanceForView}"
                                      id="promoBalance"/>
                        <h:outputLabel value="Manual Payment" for="manualPayment"/>
                        <p:commandButton id="manualPayment" value="Make payment"
                                         action="#{subscriptionManager.paymentView}"
                                         rendered="#{uISecurityManager.hasPermission('Payment', 'UPDATE')}"/>
                    </h:panelGrid>

                    <h:panelGrid columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">
                        <f:facet name="header">Unbilled Amount For Prepaid</f:facet>
                        <h:outputLabel value="UnbilledAmount" for="unbilledAmountId"/>
                        <h:outputText id="unbilledAmountId" value="#{subscriptionManager.unbilledAmount}"/>
                        <h:outputLabel value="See details" for="unbilledGetDetails"/>
                        <p:commandButton id="unbilledGetDetails" value="ShowDetails" type="button"
                                         onclick="PF('unbilledDialog').show();"/>

                    </h:panelGrid>
                    <h:panelGrid columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row"
                                 rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'POSTPAID'}">
                        <f:facet name="header">Unbilled charge</f:facet>
                        <h:outputLabel value="Total" for="totalCharge"/>
                        <h:outputText value="#{subscriptionManager.selected.totalChargeForView}" id="totalCharge"/>
                    </h:panelGrid>
                </p:tab>

                <p:tab title="Settings">
                    <p:panelGrid columns="1">
                        <p:dataTable id="settingsTable" editable="false" editMode="cell"
                                     value="#{subscriptionManager.selected.settings}"
                                     var="set" rowKey="#{set.id}">
                            <f:facet name="header">Settings</f:facet>
                            <p:column headerText="Name" style="text-align: right">
                                <h:outputText value="#{set.properties.title}"/>
                            </p:column>
                            <p:column headerText="Value" style="text-align: left">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText
                                                value="#{set.properties.title == 'Switch' or set.properties.title == 'DEALER' ?
                                                subscriptionManager.getNameFromId(set) : set.value}
                                                #{set.properties.title == 'IP_ADDRESS' ?subscriptionManager.staticIpCountAsText : ''}"/>
                                    </f:facet>
                                    <f:facet name="input"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">
                                        <h:inputText value="#{set.value}"/>
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                        </p:dataTable>
                        <f:facet name="footer">
                            <p:commandButton value="Change Switch" onclick="PF('eqChangeDialog').show(); return false;"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
                            <p:commandButton value="Edit Settings"
                                             onclick="PF('settingsChangeDialog').show(); return false;"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
                            <p:commandButton value="Add Static IP"
                                             onclick="PF('staticIpDialog').show(); return false;"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE') and
                                                            subscriptionManager.selected.getSettingByType('IP_ADDRESS') eq null}"
                                             id="staticAdder" update="staticAdder"/>
                            <p:commandButton value="Modify Static IP"
                                             onclick="PF('staticIpDialog').show(); return false;"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE') and
                                                            subscriptionManager.selected.getSettingByType('IP_ADDRESS') ne null}"
                                             id="staticModifier" update="staticModifier"/>
                        </f:facet>
                    </p:panelGrid>

                </p:tab>
                <p:tab title="External system">
                    <p:outputPanel id="technStatusPanel"
                                   rendered="#{subscriptionManager.selected.service.serviceType eq 'BROADBAND'}">
                        <h:panelGrid columns="2" style="margin-bottom: 10px;" columnClasses="lbl-column,data-column">
                            <f:facet name="header">Provisioned status</f:facet>
                            <h:outputLabel>Account Status</h:outputLabel>
                            <h:outputText
                                    value="#{not empty subscriptionManager.technicalStatus ? subscriptionManager.technicalStatus.getElement('BROADBAND_ACTIVE').value : 'N/A'}"></h:outputText>
                            <h:outputLabel>Access level</h:outputLabel>
                            <h:outputText
                                    value="#{not empty subscriptionManager.technicalStatus ? subscriptionManager.technicalStatus.getElement('BROADBAND_REDIRECT').value : 'N/A'}"></h:outputText>
                        </h:panelGrid>

                        <p:dataTable var="ajr" value="#{subscriptionManager.authRejectionStatuses}"
                                     emptyMessage="No Errors..." id="rejectionReasons" >
                            <f:facet name="header" >Authentication</f:facet>
                            <p:column style="text-align: center;font-size: 16px !important;" >
                                <h:outputText style="font-family: sans-serif !important;font-size: 16px !important;color: red;font-weight: bold" value="#{ajr}"></h:outputText>
                            </p:column>
                            <f:facet name="footer">
                                <p:commandButton value="Refresh"
                                                 actionListener="#{subscriptionManager.refreshAuthRejectionReasons}"
                                                 process="@this" update="rejectionReasons"
                                                 icon="ui-icon-refresh" />
                            </f:facet>
                        </p:dataTable>

                        <p:dataTable value="#{subscriptionManager.onlineStats}" var="stat" rowKey="#{stat.id}" rows="1"
                                     emptyMessage="User is offline">
                            <f:facet name="header">Online session</f:facet>
                            <p:column headerText="Start time">
                                <h:outputText value="#{stat.startTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="Duration">
                                <h:outputText value="#{stat.duration}"/>
                            </p:column>
                            <p:column headerText="Uploaded (MB)">
                                #{stat.up}
                            </p:column>
                            <p:column headerText="Downloaded (MB)">
                                #{stat.down}
                            </p:column>
                            <p:column headerText="NAS IP Address">
                                #{stat.nasIpAddress}
                            </p:column>
                            <p:column headerText="User IP Address">
                                #{stat.framedAddress}
                            </p:column>
                            <p:column headerText="Dslam IP Address">
                                #{stat.dslamIpAddress}
                            </p:column>
                        </p:dataTable>
                        <p:panel style="margin-top: 10px;" columns="3">
                            <p:commandButton value="Refresh" icon="ui-icon-refresh"
                                             action="#{subscriptionManager.reloadSession}" update="technStatusPanel"/>
                            <p:commandButton value="Disconnect" icon="ui-icon-power"
                                             actionListener="#{subscriptionManager.disconnectSession}"
                                             update="technStatusPanel :sbForm:messages"/>
                            <p:commandButton value="Provision" icon="ui-icon-arrowthick-2-e-w"
                                             onclick="PF('provDialog').show(); return false;" id="reprovisionBtn2"/>
                        </p:panel>

                        <p:dataTable value="#{subscriptionManager.offlineStats}" var="offlinestat"
                                     rowKey="#{offlinestat.id}" rows="5"
                                     emptyMessage="No previous sessions found.">
                            <f:facet name="header">Offline sessions</f:facet>
                            <p:column headerText="Start time">
                                <h:outputText value="#{offlinestat.startTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="End time">
                                <h:outputText value="#{offlinestat.endTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="Duration(sec)">
                                #{offlinestat.sessionDuration}
                            </p:column>
                            <p:column headerText="Uploaded (MB)">
                                #{offlinestat.up}
                            </p:column>
                            <p:column headerText="Downloaded (MB)">
                                #{offlinestat.down}
                            </p:column>
                            <p:column headerText="User Ip Address">
                                #{offlinestat.framedAddress}
                            </p:column>
                            <p:column headerText="Nas Ip Address">
                                #{offlinestat.nasIpAddress}
                            </p:column>
                            <p:column headerText="Dslam Ip Address">
                                #{offlinestat.dslamIpAddress}
                            </p:column>
                        </p:dataTable>
                    </p:outputPanel>

                    <h:panelGrid columns="2" style="margin-bottom: 10px; border: 1px solid black;"
                                 columnClasses="lbl-column,data-column"
                                 id="usage" rendered="#{subscriptionManager.cityNet}">
                        <f:facet name="header">Usage</f:facet>

                        <p:outputLabel for="startDate" value="Start Date:"/>
                        <p:calendar id="startDate" value="#{subscriptionManager.usageStartDate}"/>

                        <p:outputLabel for="endDate" value="End Date:"/>
                        <p:calendar id="endDate" value="#{subscriptionManager.usageEndDate}"/>

                        <h:outputLabel>Download</h:outputLabel>
                        <h:outputText id="download_usage" value="#{subscriptionManager.usageDownload}"></h:outputText>

                        <h:outputLabel>Upload</h:outputLabel>
                        <h:outputText id="upload_usage" value="#{subscriptionManager.usageUpload}"></h:outputText>

                        <p:commandButton id="UsageGetBtn" value="get" icon="ui-icon-refresh"
                                         action="#{subscriptionManager.getUsage}" update="download_usage upload_usage"
                                         process="@this endDate startDate download_usage upload_usage"/>

                    </h:panelGrid>

                    <p:blockUI block="usage" trigger="UsageGetBtn"/>
                </p:tab>

                <p:tab title="Notification settings">
                    <h:panelGrid columns="1" id="notifGrid">
                        <f:facet name="header">Notification settings</f:facet>

                        <p:dataTable value="#{subscriptionManager.notificationSettings}" var="row" rows="100"
                                     rowKey="#{row.id}">
                            <p:column headerText="Event">
                                <h:outputText value="#{row.event}"/>
                            </p:column>
                            <p:column headerText="Notifications">
                                <p:selectManyCheckbox value="#{row.selectedChannelList}">
                                    <f:selectItems value="#{row.channelList}" var="ch" itemLabel="#{ch}"
                                                   itemValue="#{ch.code}"/>
                                </p:selectManyCheckbox>
                            </p:column>
                        </p:dataTable>
                    </h:panelGrid>
                </p:tab>
                <p:tab title="Documents">
                    <h:panelGrid columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row"
                                 rendered="#{not empty subscriptionManager.selected.contract}">
                        <h:outputText value="Filename"/>
                        <p:commandLink style="color: blue;"
                                       value="Contract #{subscriptionManager.selected.agreement}.pdf"
                                       rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE') and not empty subscriptionManager.selected.contract}"
                                       actionListener="#{subscriptionManager.downloadContract}"/>

                        <h:outputLabel value="User"/>
                        <h:outputText value="#{subscriptionManager.selected.contract.user.userName}"/>

                        <h:outputLabel value="Created on"/>
                        <h:outputText value="#{subscriptionManager.selected.contract.lastUpdateDate.toDate()}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>
                    </h:panelGrid>

                    <h:outputText value="No contract uploaded yet"
                                  rendered="#{empty subscriptionManager.selected.contract}"
                                  style="margin-bottom: 10px;"/>

                    <p:dataTable emptyMessage="Contract does not have Addenda uploaded"
                                 selection="#{subscriptionManager.selectedAddendumList}"
                                 rendered="#{not empty subscriptionManager.selected.contract}"
                                 value="#{subscriptionManager.selected.contract.addendumList}" var="adm"
                                 paginator="true" rows="40" style="margin-top: 10px;"
                                 rowSelectMode="add"
                                 rowKey="#{adm.id}">
                        <f:facet name="header">Addenda</f:facet>
                        <p:ajax event="rowSelectCheckbox" listener="#{subscriptionManager.onAddendumRowSelect}"/>
                        <p:ajax event="rowUnselectCheckbox" listener="#{subscriptionManager.onAddendumRowUnSelect}"/>
                        <p:column selectionMode="multiple" style="width: 16px; text-align: center;"/>
                        <p:column headerText="Id" styleClass="id">
                            <p:commandLink style="color: blue;" value="#{adm.id}"
                                           action="#{subscriptionManager.downloadAddendum(adm.id)}"/>
                        </p:column>
                        <p:column headerText="Filename">
                            <p:commandLink style="color: blue;" value="#{adm.name}"
                                           action="#{subscriptionManager.downloadAddendum(adm.id)}"/>
                        </p:column>
                        <p:column headerText="User">#{adm.user.userName}</p:column>
                        <p:column headerText="Created on">
                            <h:outputText value="#{adm.lastUpdateDate.toDate()}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                    </p:dataTable>

                    <p:panelGrid columns="1">
                        <p:commandButton value="Upload contract"
                                         rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'INSERT') and empty subscriptionManager.selected.contract}"/>

                        <p:menuButton value="Upload"
                                      rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'INSERT') and not empty subscriptionManager.selected.contract}">

                            <p:menuitem value="Contract" onclick="PF('contractUpload').show(); return false;"
                                        rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'INSERT')}"/>
                            <p:menuitem value="Addendum" onclick="PF('addendumUpload').show(); return false;"
                                        rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'INSERT') and not empty subscriptionManager.selected.contract}"/>
                        </p:menuButton>

                        <p:separator/>

                        <h:outputLink
                                value="https://ttt.azerfon.az/citynet/agreement_new.php?agreement=#{subscriptionManager.selected.agreement}"
                                target="_blank" rendered="#{subscriptionManager.cityNet}">Contract</h:outputLink>

                        <!--                        <h:outputLink
                                                        value="https://ttt.azerfon.az/citynet/agreement_new_adsl.php?agreement=#{subscriptionManager.selected.agreement}"
                                                        target="_blank"
                                                        rendered="#{subscriptionManager.cityNet}">Contract (ADSL)</h:outputLink>-->

                        <h:outputLink
                                value="https://ttt.azerfon.az/citynet/order.php?agreement=#{subscriptionManager.selected.agreement}"
                                target="_blank" rendered="#{subscriptionManager.cityNet}">Order</h:outputLink>

                        <h:outputLink
                                value="https://ttt.azerfon.az/citynet/act.php?agreement=#{subscriptionManager.selected.agreement}"
                                target="_blank" rendered="#{subscriptionManager.cityNet}">Akt</h:outputLink>
                    </p:panelGrid>
                </p:tab>
                <p:tab title="Campaigns">
                    <p:dataTable value="#{subscriptionManager.campaignList}" var="camp" lazy="true" paginator="true"
                                 rows="15"
                                 rowKey="#{camp.id}" id="sbnCampList"
                                 selection="#{subscriptionManager.selectedRegister}" selectionMode="single">
                        <f:facet name="header">List of campaigns joined</f:facet>
                        <p:column headerText="Id">#{camp.campaign.id}</p:column>
                        <p:column headerText="Name">#{camp.campaign.name}</p:column>
                        <p:column headerText="Bonus">#{camp.bonusAmountForView}</p:column>
                        <p:column headerText="Status">#{camp.status}</p:column>
                        <p:column headerText="Joined on">
                            <h:outputText value="#{camp.joinDate.toDate()}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Months left">#{camp.lifeCycleCount}</p:column>
                        <p:column headerText="Processed on">
                            <h:outputText value="#{camp.processedDate ne null ? camp.processedDate.toDate() : ''}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Notes">
                            <h:outputText value="#{camp.campaignNotes}"/>
                        </p:column>
                        <p:column headerText="BonusDate">
                            <h:outputText value="#{camp.bonusDate.toDate()}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                    </p:dataTable>

                    <p:menuButton value="Action"
                                  rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">
                        <p:menuitem value="Add" onclick="PF('campDialog').show(); return false;"
                                    update=":sbForm:messages"/>
                        <p:menuitem value="Activate" action="#{subscriptionManager.activateCampaign}"
                                    update="sbnCampList :sbForm:messages :sbForm:accordionPanel"/>
                        <p:menuitem value="Delete" action="#{subscriptionManager.deleteCampaign}">
                        </p:menuitem>
                    </p:menuButton>
                </p:tab>
                <p:tab title="Status/Service Change Events">
                    <p:dataTable var="job" value="#{subscriptionManager.jobLazyDataModel}" paginator="true" rows="10"
                                 paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                                 rowsPerPageTemplate="5,10,15" selectionMode="single"
                                 selection="#{subscriptionManager.selectedJob}" id="jobTable" lazy="true">
                        <f:facet name="header">
                            <h:outputText value="Select job to view details"/>
                        </f:facet>
                        <p:column headerText="Id">
                            <h:outputText value="#{job.id}"/>
                        </p:column>
                        <p:column headerText="Execution Date">
                            <h:outputText value="#{job.startTime}" converter="dateTimeConverter">
                            </h:outputText>
                        </p:column>
                        <p:column headerText="User">
                            <h:outputText value="#{job.user.userName}"/>
                        </p:column>
                        <p:column headerText="Creation Date">
                            <h:outputText value="#{job.lastUpdateDate}" converter="dateTimeConverter">
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Category">
                            <h:outputText value="#{job.category}"/>
                        </p:column>
                        <p:column headerText="Status">
                            <h:outputText value="#{job.status}"/>
                        </p:column>
                        <f:facet name="footer">
                            <p:commandButton value="Edit" oncomplete="PF('jobEditDialog').show(); return false;"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
                            <p:commandButton value="View" oncomplete="PF('jobDesc').show(); return false;"/>
                        </f:facet>
                    </p:dataTable>
                </p:tab>
                <p:tab title="Address">
                    <h:panelGrid id="addressInfo" columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">
                        <h:outputLabel value="City"/>
                        <h:inputText value="#{subscriptionManager.selected.details.city}"/>

                        <h:outputLabel value="Street"/>
                        <h:inputText value="#{subscriptionManager.selected.details.street}"/>

                        <h:outputLabel value="Building"/>
                        <h:inputText value="#{subscriptionManager.selected.details.building}"/>

                        <h:outputLabel value="Apartment"/>
                        <h:inputText value="#{subscriptionManager.selected.details.apartment}"/>
                    </h:panelGrid>
                </p:tab>
            </p:accordionPanel>
            <p:separator/>
            <h:panelGrid columns="2" style="margin-top: 10px;">
                <p:button outcome="/admin.xhtml" value="Cancel"/>
                <p:commandButton action="#{subscriptionManager.save()}" update="@form messages" value="Save"
                                 rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">
                    <p:confirm header="Confirm operation" message="Do you really want to perform this operation?"
                               icon="ui-icon-alert"/>
                </p:commandButton>
                <p:confirmDialog global="true" closeOnEscape="true">
                    <p:commandButton value="Yes" type="button" icon="ui-icon-check" styleClass="ui-confirmdialog-yes"/>
                    <p:commandButton value="No" type="button" icon="ui-icon-close" styleClass="ui-confirmdialog-no"/>
                </p:confirmDialog>
                <p:blockUI block=":sbForm" widgetVar="blockUIGeneral">
                    <h:outputLabel style="font-weight: bold; font-size: 12px !important;"
                                   value="Requesting, please wait..."/><br/><br/>
                    <p:graphicImage value="/resources/img/loading.gif"/>
                </p:blockUI>


                <!--
                                <form action="http://10.13.166.19/addticket" method="post" target="_blank">
                                    <input type="hidden" name="user" value="bo"/>
                                    <input type="hidden" name="key" value="40f98e4e7ee3ded6936e7a89940346023569568f32510cac953cffea6e4a44db"/>
                                    <input type="hidden" name="contract_id" value="agr"/>
                                    <input type="submit" value="Create TT"/>
                                </form>
                -->
            </h:panelGrid>

            <p:dialog id="jobDesc" header="Job Description" widgetVar="jobDesc" hideEffect="bounce" width="300"
                      dynamic="true">
                <p:panelGrid>
                    <p:row>
                        <p:column>
                            <h:outputLabel value="Job Id"/>
                        </p:column>
                        <p:column>
                            <h:outputText value="#{subscriptionManager.selectedJob.id}"/>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column>
                            <h:outputLabel value="Is Counter?"/>
                        </p:column>
                        <p:column>
                            <h:outputText value="#{subscriptionManager.selectedJob.counter}"/>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column colspan="2">
                            <p:dataTable value="#{subscriptionManager.selectedJob.propertyList}" var="property">
                                <p:column headerText="Job Details">
                                    <h:outputText value="#{property}" converter="#{jobPropertyConverter}"/>
                                </p:column>
                            </p:dataTable>
                        </p:column>
                    </p:row>
                </p:panelGrid>
            </p:dialog>

            <p:dialog position="center" widgetVar="eqChangeDialog" id="eqDialog" closable="true" closeOnEscape="true"
                      maximizable="false"
                      width="1000" showEffect="explode" resizable="false">
                <f:facet name="header">Equipment search</f:facet>

                <p:outputPanel id="minipopChangePanel">

                    <p:dataTable value="#{subscriptionManager.minipopList}" var="mp" paginator="true" rows="10"
                                 filteredValue="#{subscriptionManager.filteredMinipopList}"
                                 selection="#{subscriptionManager.selectedMiniPop}" selectionMode="single"
                                 rowKey="#{mp.id}" id="minipopChangeTable">
                        <f:facet name="header">Minipops</f:facet>
                        <p:column headerText="Id" styleClass="id" filterMatchMode="contains" filterBy="#{mp.id}">
                            <h:outputText value="#{mp.id}"/>
                        </p:column>
                        <p:column headerText="Category" style="width: 60px;">#{mp.category}</p:column>
                        <p:column headerText="Device status" style="width: 50px;">
                            #{mp.deviceStatus}
                        </p:column>
                        <p:column headerText="Switch" style="width: 60px;" filterMatchMode="contains"
                                  filterBy="#{mp.switch_id}">
                            <h:outputText value="#{mp.switch_id}"/>
                        </p:column>
                        <p:column headerText="IP Address" style="width: 60px;" filterMatchMode="contains"
                                  filterBy="#{mp.ip}">
                            <h:outputText value="#{mp.ip}"/>
                        </p:column>
                        <p:column headerText="Ports number" styleClass="id">#{mp.numberOfPorts}</p:column>
                    </p:dataTable>
                    <p:separator/>
                    <h:panelGrid columns="2">
                        <p:commandButton value="Select" update="messages"
                                         action="#{subscriptionManager.onSelectMinipop}"
                                         onclick="PF('eqChangeDialog').hide();"/>
                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>

            <p:dialog position="center"
                      widgetVar="settingsChangeDialog"
                      closable="true"
                      closeOnEscape="true"
                      maximizable="false"
                      resizable="false"
                      width="450px">
            <f:facet name="header" >Change Settings</f:facet>
                <p:outputPanel>
                    <h:panelGrid id="uniSettingsGrid" columns="2" width="400px">
                        <h:outputLabel value="ATS port"/>
                        <p:inputText  value="#{subscriptionManager.uninetAtsPort}"/>
                        <h:outputLabel  value="MAC address"/>
                        <p:inputText  value="#{subscriptionManager.uninetMAC}"/>
                        <h:outputLabel  value="Port"/>
                        <p:inputText  value="#{subscriptionManager.uninetPort}"/>
                        <h:outputLabel  value="Slot"/>
                        <p:inputText  value="#{subscriptionManager.uninetSlot}"/>
                        <h:outputText  value="Info" />
                        <p:inputText  value="#{subscriptionManager.uninetInfo}" />
                        <h:outputText  value="Password" />
                        <p:inputText  value="#{subscriptionManager.uninetPassword}" />
                        <h:outputLabel  value="Dealers"/>
                        <p:selectOneMenu  value="#{subscriptionManager.selectedDealerId}">
                            <f:selectItem noSelectionOption="true" itemLabel="Choose Dealer"/>
                            <f:selectItems value="#{subscriptionManager.dealerList}" var="d" itemLabel="#{d.name}"
                                           itemValue="#{d.id}" />
                        </p:selectOneMenu>
                        <h:outputLabel/>
                        <p:commandButton actionListener="#{subscriptionManager.saveUninetSettings}" value="Save changes"
                                         update=":sbForm:accordionPanel messages"
                                         process=":sbForm:uniSettingsGrid"
                                         oncomplete="PF('settingsChangeDialog').hide()" />
                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>

            <p:dialog position="center" widgetVar="jobEditDialog" id="jobEditDialog" closable="true"
                      closeOnEscape="true"
                      maximizable="false"
                      width="320" showEffect="explode" resizable="false" header="Job Editor" dynamic="true">
                <p:panelGrid columns="2" columnClasses="lbl-column,data-column">
                    <h:outputLabel value="Execution Date"/>
                    <p:calendar value="#{subscriptionManager.selectedJob.startTime}" pattern="MM/dd/yyyy hh:mm:ss a"
                                navigator="true" styleClass="small-calendar" converter="dateTimeConverter"/>
                </p:panelGrid>
                <h:panelGrid columns="2">
                    <p:commandButton value="Update" update="messages"
                                     action="#{subscriptionManager.onEditJob}"
                                     oncomplete="PF('jobEditDialog').hide();"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog closeOnEscape="true" closable="true" maximizable="false" width="700" widgetVar="addendumUpload">
                <f:facet name="header">
                    Upload addendums
                </f:facet>
                <p:fileUpload mode="advanced" multiple="true"
                              fileUploadListener="#{subscriptionManager.handleAddendumUpload}"/>
            </p:dialog>

            <p:dialog id="unbilledDialogId" widgetVar="unbilledDialog" width="700">
                <f:facet name="header">Unbilled Charges</f:facet>
                <p:dataTable var="charge" value="#{subscriptionManager.unbilledCharges}" id="unbilledTableId">
                    <p:column headerText="Name">
                        <h:outputText value="#{charge.name}"/>
                    </p:column>
                    <p:column headerText="Price">
                        <h:outputText value="#{charge.price}"/>
                    </p:column>
                    <p:column headerText="Count">
                        <h:outputText value="#{charge.count}"/>
                    </p:column>
                    <p:column headerText="Total">
                        <h:outputText value="#{charge.total}"/>
                    </p:column>
                    <p:column headerText="Remaining days">
                        <h:outputText value="#{charge.remainingDaysStr}"/>
                    </p:column>
                </p:dataTable>
            </p:dialog>

            <p:dialog id="vasDialog" widgetVar="vasDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onVASDIalogHide}" update="vasDialog"/>


                <p:dataTable value="#{subscriptionManager.allowedVasList}"
                             selection="#{subscriptionManager.selectedVAS}"
                             selectionMode="single"
                             var="srv"
                             rowKey="#{srv.id}"
                             rows="10"
                             paginator="true"
                             id="allowedVasList">
                    <f:facet name="header">Value Added Services</f:facet>
                    <p:column headerText="Name" sortBy="#{srv.name}" filterBy="#{srv.name}"
                              filterMatchMode="contains">#{srv.name}</p:column>
                    <p:column headerText="Type">#{srv.code.type}</p:column>
                    <p:column headerText="Price">#{srv.priceInDouble}</p:column>

                    <p:column headerText="Value"
                              rendered="#{srv.provider.id eq subscriptionManager.citynetProviderId and srv.staticIp and srv.staticIPType eq subscriptionManager.normalCharged}">
                        <p:selectOneMenu id="ip" value="#{subscriptionManager.chargedIpAddressString}"
                                         style="width:125px">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>
                    </p:column>

                    <p:column headerText="Value"
                              rendered="#{srv.provider.id eq subscriptionManager.citynetProviderId and srv.staticIp and srv.staticIPType eq subscriptionManager.commendantFree}">
                        <p:selectOneMenu id="ipFree" value="#{subscriptionManager.freeIpAddressString}"
                                         style="width:125px">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>
                    </p:column>
                </p:dataTable>

                <p:blockUI block=":sbForm" trigger="vasDialogSaveBtn" widgetVar="blockui">
                    <h:outputLabel style="font-weight: bold; font-size: 12px !important;"
                                   value="Requesting, please wait..."/><br/><br/>
                    <p:graphicImage value="/resources/img/loading.gif"/>
                </p:blockUI>

                <h:panelGrid columns="2">
                    <p:outputLabel value="Count:"/>

                    <p:inplace>
                        <f:facet name="output">
                            <h:inputText value="#{subscriptionManager.vasAddCount}" disabled="true"
                                         style="width: 50px"/>
                        </f:facet>
                        <f:facet name="input">
                            <p:inputText value="#{subscriptionManager.vasAddCount}" style="width: 50px"/>
                        </f:facet>
                    </p:inplace>

                    <h:outputLabel value="VAS expiration date" for="expireDate"/>
                    <p:calendar id="expireDate" value="#{subscriptionManager.vasExpirationDate}"
                                pattern="MM/dd/yyyy"/>

                </h:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.addVas}" id="vasDialogSaveBtn" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     onstart="PF('vasDialog').hide(); PF('blockui').show();"
                                     oncomplete="PF('blockui').hide();"
                                     update=":sbForm:messages"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog id="sbnVASDetailsDialog" dynamic="true" binding="#{subscriptionManager.sbnVASDialog}"
                      widgetVar="sbnVASDetailsDialog" closeOnEscape="true" closable="true" maximizable="false"
                      width="840" showEffect="explode">
                <f:facet name="header">Value Added Service Details</f:facet>
                <p:outputPanel id="oneTimeVAS"
                               rendered="#{not empty subscriptionManager.selectedSbnVAS and subscriptionManager.selectedSbnVAS.vas.code.type eq 'ONETIME_VARIABLE_CHARGE'}">
                    <p:dataTable value="#{subscriptionManager.selectedSbnVAS.settings}" var="vasSet">
                        <p:column headerText="Type">#{vasSet.name}</p:column>
                        <p:column headerText="Price">#{vasSet.value}</p:column>
                        <p:column headerText="Length">#{vasSet.length}</p:column>
                        <p:column headerText="Subtotal">#{vasSet.totalForView}</p:column>
                        <f:facet name="footer">
                            <h:outputText value="Total: #{subscriptionManager.selectedSbnVAS.vas.total} AZN"/>
                        </f:facet>
                    </p:dataTable>
                </p:outputPanel>
                <p:outputPanel id="prStatVAS"
                               rendered="#{not empty subscriptionManager.selectedSbnVAS and subscriptionManager.selectedSbnVAS.vas.code.type eq 'PERIODIC_STATIC'}">
                    <p:panelGrid columns="2" columnClasses="lbl-column,data-column" id="statVASPanel">
                        <f:facet name="header">#{subscriptionManager.selectedSbnVAS.vas.name}</f:facet>
                        <h:outputLabel value="Id"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.id}"/>

                        <h:outputLabel value="Name"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.name}"/>

                        <h:outputLabel value="Code"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.code.name}"/>

                        <h:outputLabel value="Type"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.code.type}"/>

                        <h:outputLabel value="Status"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.status}"/>

                        <h:outputLabel value="Activation date"/>
                        <h:outputText
                                value="#{not empty subscriptionManager.selectedSbnVAS.activeFromDate ? subscriptionManager.selectedSbnVAS.activeFromDate.toDate() : ''}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Expiration date"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.expirationDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Date"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.lastUpdateDate.toDate()}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Resource"/>
                        <h:outputText id="vasResource"
                                      value="#{not empty subscriptionManager.selectedSbnVAS.resource ? subscriptionManager.selectedSbnVAS.resource.bucketList.get(0).capacity :''}"/>

                        <h:outputLabel value="IP"
                                       rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.citynetProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.normalCharged}"/>
                        <p:selectOneMenu id="ipEdit" value="#{subscriptionManager.chargedIpAddressString}"
                                         style="width:125px"
                                         rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.citynetProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.normalCharged}">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>

                        <h:outputLabel value="IP"
                                       rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.citynetProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.commendantFree}"/>
                        <p:selectOneMenu id="ipEditFree" value="#{subscriptionManager.freeIpAddressString}"
                                         style="width:125px"
                                         rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.citynetProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.commendantFree}">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>

                    </p:panelGrid>
                    <p:commandButton value="Edit" actionListener="#{subscriptionManager.editVAS}"
                                     rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"
                                     update=":sbForm:vasResource :sbForm:statVASPanel"
                    />
                </p:outputPanel>
            </p:dialog>

            <p:dialog id="statusChangeDialog" widgetVar="statusChangeDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode" dynamic="true">
                <f:facet name="header">Status change details</f:facet>
                <p:panelGrid columns="2" columnClasses="lbl-column,data-column">
                    <h:outputLabel value="Start date"/>
                    <p:calendar value="#{subscriptionManager.statusChangeStartDate}" pattern="dd/MM/yyyy HH:mm:ss"
                                navigator="true" styleClass="small-calendar"/>

                    <h:outputLabel value="Apply Reversal on the End date"
                                   rendered="#{not empty subscriptionManager.selectedStatus
                                   and subscriptionManager.selectedStatus ne 'FINAL' and subscriptionManager.selectedStatus ne 'PRE_FINAL'}" />
                    <p:selectBooleanCheckbox value="#{subscriptionManager.applyReversalEndDate}"
                                             rendered="#{not empty subscriptionManager.selectedStatus
                                             and subscriptionManager.selectedStatus ne 'FINAL' and subscriptionManager.selectedStatus ne 'PRE_FINAL'}"/>
                    <h:outputLabel value="End date"
                                   rendered="#{not empty subscriptionManager.selectedStatus
                                   and subscriptionManager.selectedStatus ne 'FINAL' and subscriptionManager.selectedStatus ne 'PRE_FINAL'}"/>
                    <p:calendar value="#{subscriptionManager.statusChangeEndDate}" pattern="dd/MM/yyyy HH:mm:ss"
                                navigator="true"
                                rendered="#{not empty subscriptionManager.selectedStatus
                                and subscriptionManager.selectedStatus ne 'FINAL' and subscriptionManager.selectedStatus ne 'PRE_FINAL'}"
                                styleClass="small-calendar"/>

                    <h:outputLabel value="Value Added Serice name"/>
                    <h:outputText
                            value="#{not empty subscriptionManager.statusChangeRule ? subscriptionManager.statusChangeRule.vas.name : '-'}"/>

                    <h:outputLabel value="Price"/>
                    <h:outputText
                            value="#{not empty subscriptionManager.statusChangeRule ? subscriptionManager.statusChangeRule.vas.priceInDouble: 0} AZN"/>
                </p:panelGrid>
                <p:commandButton value="Change status" actionListener="#{subscriptionManager.changeStatus}"
                                 oncomplete="PF('statusChangeDialog').hide();"
                                 update=":sbForm:accordionPanel:sbnInfo :sbForm:messages"
                                 rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
            </p:dialog>

            <p:dialog id="serviceChangeDialog" widgetVar="serviceChangeDialog" closeOnEscape="true"
                      closable="true" maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onServiceChangeDialogClose}"
                        update="serviceChangeDialog"/>
                <p:panelGrid columns="2" id="servicePanel" rowClasses="odd-row,even-row" styleClass="small-input">
                    <f:facet name="header">Search for Services</f:facet>
                    <p:outputPanel>
                        <p:panelGrid columns="2" columnClasses="search-lbl-column, search-data-column"
                                     rowClasses="odd-row,even-row">
                            <h:outputLabel value="Id"/>
                            <h:inputText value="#{subscriptionManager.filterServiceID}">
                                <f:ajax listener="#{subscriptionManager.onServiceSearch}" render="serviceList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:outputPanel>
                        <p:panelGrid columns="2" columnClasses="search-lbl-column, search-data-column"
                                     rowClasses="odd-row,even-row">
                            <h:outputLabel value="Name"/>
                            <h:inputText value="#{subscriptionManager.serviceName}">
                                <f:ajax listener="#{subscriptionManager.onServiceSearch}" render="serviceList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:commandButton value="Reset" actionListener="#{subscriptionManager.resetServiceList}"
                                     update="servicePanel serviceList"/>
                </p:panelGrid>

                <p:dataTable value="#{subscriptionManager.serviceList}"
                             selection="#{subscriptionManager.selectedService}" selectionMode="single"
                             var="srv" rowKey="#{srv.id}" rows="10" paginator="true" id="serviceList" lazy="true">
                    <f:facet name="header">Services</f:facet>
                    <p:column headerText="Id">#{srv.id}</p:column>
                    <p:column headerText="Name">#{srv.name}</p:column>
                    <p:column headerText="Type">#{srv.serviceType}</p:column>
                </p:dataTable>

                <h:panelGrid columns="2" rowClasses="odd-row,even-row" styleClass="small-input">
                    <h:outputLabel value="Cancel charge" for="cancelChargeId"/>
                    <p:selectBooleanCheckbox id="cancelChargeId" value="#{subscriptionManager.cancelCharge}" disabled="true">
                        <!--<p:ajax process="@this serviceList" update="futureDate"/>-->
                    </p:selectBooleanCheckbox>
                </h:panelGrid>

                <h:panelGrid columns="2" rowClasses="odd-row,even-row" styleClass="small-input">
                    <f:facet name="header">Change Service on the Future</f:facet>
                    <h:outputLabel value="Apply future date" for="applyFutureDateId"/>
                    <p:selectBooleanCheckbox id="applyFutureDateId" value="#{subscriptionManager.applyFutureDate}">
                        <!--<p:ajax process="@this serviceList" update="futureDate"/>-->
                    </p:selectBooleanCheckbox>

                    <h:outputLabel value="Service change future date" for="futureDate"/>
                    <p:calendar id="futureDate" value="#{subscriptionManager.serviceChangeFutureDate}"
                                pattern="MM/dd/yyyy HH:mm:ss"/>
                </h:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.changeService}"
                                     oncomplete="PF('serviceChangeDialog').hide();" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     update=":sbForm:accordionPanel:tarifPanel :sbForm:messages">

                        <p:confirm header="Confirm operation"
                                   message="Service will be changed, do you really want to perform this operation?"
                                   icon="ui-icon-alert"/>
                    </p:commandButton>
                    <p:confirmDialog global="true" closeOnEscape="true">
                        <p:commandButton value="Yes" type="button" icon="ui-icon-check"
                                         styleClass="ui-confirmdialog-yes"/>
                        <p:commandButton value="No" type="button" icon="ui-icon-close"
                                         styleClass="ui-confirmdialog-no"/>
                    </p:confirmDialog>

                </h:panelGrid>
            </p:dialog>

            <p:dialog widgetVar="staticIpDialog" id="staticIpDialog" width="550">
                <p:panelGrid columns="3">
                    <h:outputLabel value="Static IP"/>
                    <h:inputText value="#{subscriptionManager.staticIp}" size="130"/>
                    <p:inplace id="static-ip" >
                        <p:inputText value="#{subscriptionManager.staticIpCount}" label="text" style="width: 50px" />
                    </p:inplace>
                </p:panelGrid>
                <p:commandButton value="Add IP" action="#{subscriptionManager.addStaticIP}"
                                 rendered="#{subscriptionManager.selected.getSettingByType('IP_ADDRESS') eq null}"
                                 update=":sbForm:accordionPanel staticIpDialog messages" process="staticIpDialog"
                                 oncomplete="PF('staticIpDialog').hide();"/>
                <p:commandButton value="Modify IP" action="#{subscriptionManager.modifyStaticIP}"
                                 rendered="#{subscriptionManager.selected.getSettingByType('IP_ADDRESS') ne null}"
                                 update=":sbForm:accordionPanel staticIpDialog messages" process="staticIpDialog"
                                 oncomplete="PF('staticIpDialog').hide();"/>
                <p:commandButton value="Remove IP" action="#{subscriptionManager.removeStaticIP}"
                                 rendered="#{subscriptionManager.selected.getSettingByType('IP_ADDRESS') ne null}"
                                 update=":sbForm:accordionPanel staticIpDialog messages" process="staticIpDialog"
                                 oncomplete="PF('staticIpDialog').hide();"/>
            </p:dialog>

            <p:dialog id="campDialog" widgetVar="campDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onCampaignDialogClosed}" update="campList"/>
                <p:panelGrid columns="1" id="campPanel">
                    <f:facet name="header">Search for Campaign</f:facet>
                    <p:outputPanel>
                        <p:panelGrid columns="2">
                            <h:outputLabel value="Name"/>
                            <h:inputText value="#{subscriptionManager.campaignName}" style="width: 415px;"
                                         onkeypress="return true;">
                                <f:ajax listener="#{subscriptionManager.onCampaignSearch}" render="campList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:commandButton value="Reset" actionListener="#{subscriptionManager.resetCampaignList}"
                                     update="campPanel campList"/>
                </p:panelGrid>

                <p:dataTable value="#{subscriptionManager.availableCampaignList}"
                             selection="#{subscriptionManager.selectedCampaign}" selectionMode="single"
                             var="camp" rowKey="#{camp.id}" rows="10" paginator="true" id="campList" lazy="true"
                             editable="true" editMode="cell">
                    <f:facet name="header">Available campaigns List</f:facet>
                    <p:column headerText="Id" styleClass="id">#{camp.id}</p:column>
                    <p:column headerText="Name">#{camp.name}</p:column>
                    <p:column headerText="Type">#{camp.target}</p:column>
                    <p:column headerText="Description">#{camp.desc}</p:column>

                    <p:column headerText="Notes">
                        <p:cellEditor>
                            <f:facet name="output">
                                <h:outputText value="Click to enter notes"/>
                            </f:facet>
                            <f:facet name="input">
                                <p:inputText id="campaignNotes" value="#{subscriptionManager.campaignNotes}"
                                             style="width:96%"/>
                            </f:facet>
                        </p:cellEditor>
                    </p:column>
                </p:dataTable>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.addCampaign}" id="campDialogSaveBtn" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     oncomplete="PF('campDialog').hide();"
                                     update=":sbForm:accordionPanel :sbForm:accordionPanel:sbnCampList :sbForm:messages"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog id="provDialog" dynamic="true" widgetVar="provDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onProvisioningDialogClosed}" update="provDialog"/>
                <p:panelGrid columns="2" id="provPanel">
                    <f:facet name="header">Reason</f:facet>
                    <h:outputLabel value="Standard"/>
                    <p:selectOneMenu id="stdReason" value="#{subscriptionManager.provisioningReasonStandard}">
                        <f:ajax event="change" render="provPanel"/>
                        <f:selectItem noSelectionOption="true" itemLabel="Select a reason"/>
                        <f:selectItem itemLabel="Channels or Internet did not open after payment"
                                      itemValue="Channels or Internet did not open after payment"/>
                        <f:selectItem itemLabel="Channels ot Internet unexpectedly stopped workinng"
                                      itemValue="Channels or Internet unexpectedly stopped workinng"/>
                        <f:selectItem itemLabel="Other reason" itemValue="Other reason"/>
                    </p:selectOneMenu>

                    <h:outputLabel value="Other"
                                   rendered="#{subscriptionManager.provisioningReasonStandard eq 'Other reason'}"/>
                    <h:inputText id="otherReason" value="#{subscriptionManager.provisioningReason}"
                                 style="width: 600px;"
                                 binding="#{subscriptionManager.provisioiningReasonOtherInput}"
                                 rendered="#{subscriptionManager.provisioningReasonStandard eq 'Other reason'}"
                                 validator="#{subscriptionManager.validateReprovisioningReason}"/>
                </p:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton actionListener="#{subscriptionManager.reprovision}" id="provDialogSaveBtn"
                                     value="Proceed"
                                     onstart="proceedWithProvDialog()"
                                     oncomplete="PF('blockUIGeneral').hide();"
                                     update=":sbForm:messages sbForm:provPanel"/>
                </h:panelGrid>
            </p:dialog>

            <script type="text/javascript">
                function proceedWithProvDialog() {
                    if (jQuery('#sbForm\\:stdReason_input').val() || jQuery('#sbForm\\:otherReason').val()) {
                        PF('provDialog').hide();
                        PF('blockUIGeneral').show();
                    }
                }
            </script>
        </h:form>

        <p:dialog closeOnEscape="true" closable="true" maximizable="false" width="700" widgetVar="contractUpload">
            <f:facet name="header">
                Upload contract
            </f:facet>
            <h:form>
                <p:fileUpload mode="advanced" fileUploadListener="#{subscriptionManager.handleContractUpload}"/>
            </h:form>
        </p:dialog>

        


        <p:dialog id="manualActivateDialog" widgetVar="manualActivateDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode" dynamic="true">
                <f:facet name="header">Manual Activation</f:facet>
                
           <h:form>
                <p:panelGrid columns="2" columnClasses="lbl-column,data-column">
                    <h:outputLabel value="Activation date"/>
                    <p:calendar value="#{subscriptionManager.selected.activationDate}" pattern="MM/dd/yyyy hh:mm:ss a"
                                navigator="true" styleClass="small-calendar" converter="dateTimeConverter"/>
                </p:panelGrid>
                <p:commandButton value="Activate" actionListener="#{subscriptionManager.activateSubscriptionManually}"
                                 oncomplete="PF('manualActivateDialog').hide();"
                                 update=":sbForm:accordionPanel :sbForm:messages"
                                 rendered="#{uISecurityManager.hasPermission('SubscriptionActivate', 'UPDATE')}"/>
          </h:form>
        </p:dialog>




    </ui:define>
    <ui:define name="east">
        <h:form>
            <p:menu>
                <p:submenu label="Navigation" styleClass="disable-scroll">
                    <p:menuitem value="Offline stats" action="#{subscriptionManager.goToOfflineStats()}"/>
                    <p:menuitem value="Subscriber details" action="#{subscriptionManager.redirect()}"/>
                </p:submenu>
            </p:menu>

        </h:form>
    </ui:define>
</ui:composition>
</html>