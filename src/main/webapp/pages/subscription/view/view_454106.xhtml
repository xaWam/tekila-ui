<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"

      xmlns:c="http://java.sun.com/jsp/jstl/core">

<!--
    Replace path to template, title, header and body
    with actual data.
-->
<f:metadata>
    <f:viewParam name="subscription" value="#{subscriptionManager.subscriptionID}"/>
    <f:viewParam name="subscriber" value="#{subscriptionManager.subscriberID}"/>
    <f:event type="preRenderView" listener="#{subscriptionManager.onPageLoad}"/>
</f:metadata>
<ui:composition template="/template_admin.xhtml">
    <ui:define name="pageTitle">Subscription #{subscriptionManager.selected.agreement} - View/Edit</ui:define>
    <ui:define name="content">
        <h:form id="sbForm" onkeypress="return event.keyCode != 13;">
            <p:growl id="messages" severity="info,warn,error,fatal" showDetail="true"/>
            <p:accordionPanel activeIndex="0" dynamic="true" multiple="true" cache="true" id="accordionPanel">
                <p:tab title="Details &amp; Balance">
                    <h:panelGrid id="sbnInfo" columns="2" cellpadding="5" columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">

                        <h:outputLabel value="Subscriber name" for="subName"/>
                        <h:outputText
                                rendered="#{subscriptionManager.selected.subscriber.details.type.typeName eq 'Individual'}"
                                value="#{subscriptionManager.selected.subscriber.details.firstName}
                                          #{subscriptionManager.selected.subscriber.details.middleName}
                                          #{subscriptionManager.selected.subscriber.details.surname}"
                                id="subName"/>

                        <h:outputLabel value="Address" for="subAddress"/>
                        <h:outputText value="#{subscriptionManager.subscriptionAddress}"
                                      id="subAddress"/>

                        <h:outputLabel value="Agreement"/>
                        <h:outputText value="#{subscriptionManager.selected.agreement} &#9;( #{subscriptionManager.selected.details.desc} )"/>

                        <h:outputLabel value="Status"/>

                        <p:outputPanel id="sbnStatus">
                            <h:outputText id="statusR" value="#{subscriptionManager.selected.status}"
                                          rendered="#{not uISecurityManager.hasPermission('Subscription', 'UPDATE')}"/>

                            <script type="text/javascript">
                                function showStatusChangeDialog(data) {
                                    if (data.status == 'success') {
                                        PF('statusChangeDialog').show();
                                    }
                                }

                            </script>

                            <p:inplace id="statusW"
                                       rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}">
                                <f:facet name="output">
                                    <h:outputText value="#{subscriptionManager.selected.status}"/>
                                </f:facet>
                                <f:facet name="input">
                                    <p:selectOneMenu value="#{subscriptionManager.selectedStatus}" id="statusSelect"
                                                     widgetVar="statusSelect">
                                        <f:ajax listener="#{subscriptionManager.onStatusChange}"
                                                render=":sbForm:messages statusSelect"/>
                                        <f:selectItems value="#{subscriptionManager.subscriptionStatusList}"/>
                                    </p:selectOneMenu>
                                </f:facet>
                            </p:inplace>

                            <p:spacer width="30" height="0"
                                      rendered="#{subscriptionManager.selected.service.provider.id eq subscriptionManager.citynetProviderId
                                                            and subscriptionManager.selected.status eq 'FINAL'
                                                            and uISecurityManager.hasPermission('Subscription', 'UPDATE')}"/>
                            <p:commandButton value="Restore"
                                             action="#{subscriptionManager.restoreToInitialFromFinal}"
                                             rendered="#{subscriptionManager.selected.service.provider.id eq subscriptionManager.citynetProviderId
                                                                and subscriptionManager.selected.status eq 'FINAL'
                                                                and uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                             oncomplete="if(args.restored)location.reload(true);"
                                             update=":sbForm:messages"/>
                        </p:outputPanel>
                        <h:outputLabel>Tariff plan</h:outputLabel>
                        <p:outputPanel id="tarifPanel">
                            <h:outputText value="#{subscriptionManager.selected.service.name}"
                                          rendered="#{not uISecurityManager.hasPermission('Subscription', 'UPDATE')}"/>

                            <p:commandLink value="#{subscriptionManager.selected.service.name}"
                                           onclick="PF('serviceChangeDialog').show(); return false;"
                                           rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                           id="tarifName" update="tarifName"/>
                        </p:outputPanel>

                        <h:outputLabel value="Service provider"/>
                        <h:outputText value="#{subscriptionManager.selected.service.provider.name}"/>


                        <h:outputLabel for="subscriptionCreateDate" value="Created on"/>
                        <h:outputText id="subscriptionCreateDate" value="#{subscriptionManager.selected.creationDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel for="subscriptionExpDate" value="Expires on"/>
                        <h:outputText id="subscriptionExpDate" value="#{subscriptionManager.selected.expirationDateWithGracePeriodAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>


                        <h:outputLabel for="subscriptionBillDate" value="Billed UpTo"/>
                        <h:outputText id="subscriptionBillDate"
                                      value="#{subscriptionManager.selected.billedUpToDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Created by"/>
                        <h:outputText
                                value="#{subscriptionManager.selected.user ne null ? subscriptionManager.selected.user.userName : '-'}"/>
                        <h:outputLabel value="Comment" for="comment"/>
                        <p:inplace emptyLabel="None" event="click">
                            <p:editor id="comment" value="#{subscriptionManager.selected.details.comments}"
                                      width="1000" height="200"/>
                        </p:inplace>

                        <h:outputLabel value="One Time Prolongation" for="prolong"/>
                        <p:commandButton id="prolong"
                                         actionListener="#{subscriptionManager.prolongPrepaidSubscriptionOneTime}"
                                         value="Prolong one month"
                                         onstart="proceedWithProvDialog()"
                                         oncomplete="PF('blockUIGeneral').hide();"
                                         update=":sbForm:accordionPanel :sbForm:messages"/>

                        <h:outputLabel value="Reset eCare password"/>

                        <p:commandButton value="Reset" action="#{subscriptionManager.resetPassword}">
                            <p:confirm
                                    header="eCare password will be resetted to agreement number upon pressing save button"
                                    message="Are you sure?"
                                    icon="ui-icon-alert"/>
                        </p:commandButton>
                    </h:panelGrid>

                </p:tab>

                <p:tab title="Settings &amp; Resource &amp; Availability">
                    <h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5"
                                 columnClasses="lbl-column,data-column"
                                 rowClasses="odd-row,even-row">
                        <h:outputText value="Is Available on eCare: "/>
                        <p:selectBooleanCheckbox value="#{subscriptionManager.selected.details.availableEcare}"/>

                    </h:panelGrid>

                    <p:spacer height="15"/>

                    <p:panelGrid columns="1">
                        <p:dataTable id="settingsTable" editable="true" value="#{subscriptionManager.selected.settings}"
                                     var="set" rowKey="#{set.id}">
                            <f:facet name="header">Settings</f:facet>
                            <p:column headerText="Name" style="text-align: center">
                                <h:outputText value="#{set.properties.title}"/>
                            </p:column>
                            <p:column headerText="Value" style="text-align: center">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText
                                                value="#{set.properties.title eq 'Switch' ? subscriptionManager.getSwitchName(set.value) : set.value}"/>
                                    </f:facet>
                                    <f:facet name="input"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"

                                    >
                                        <h:inputText value="#{set.value}"/>
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                            <f:facet name="footer">
                                <p:commandButton value="Edit" onclick="PF('eqChangeDialog').show(); return false;"
                                                 rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
                            </f:facet>
                        </p:dataTable>
                    </p:panelGrid>

                    <p:spacer height="10"/>
                    <h:panelGrid columns="1">
                        <p:dataTable id="subResourcesTable" value="#{subscriptionManager.bucketList}" var="buck"
                                     editable="true"
                                     rowKey="#{buck.id}">
                            <f:facet name="header">Resources</f:facet>

                            <p:ajax event="rowEdit" listener="#{subscriptionManager.onResourceRowEdit}"/>

                            <p:column headerText="Type" style="text-align: center">
                                <h:outputText value="#{buck.type}"/>
                            </p:column>

                            <p:column headerText="Capacity" style="text-align: center">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText value="#{buck.capacity} #{buck.unitForView}"/>
                                    </f:facet>
                                    <f:facet name="input"
                                             rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"
                                    >
                                        <h:inputText value="#{buck.capacity}"/>
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                            <p:column headerText="Unit" style="text-align: center">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText value="#{buck.unit}"/>
                                    </f:facet>
                                    <f:facet name="input">
                                        <p:selectOneMenu id="unitMenu" value="#{buck.unit}" rendered="true"
                                                         style="width:20%;">
                                            <f:selectItems value="#{subscriptionManager.unitList}"/>
                                        </p:selectOneMenu>
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                            <p:column headerText="Operations" style="text-align: center">
                                <p:rowEditor
                                        rendered="#{uISecurityManager.securityManager.checkUIPermissions('Service Update', 'UPDATE')}"
                                />
                            </p:column>

                        </p:dataTable>
                    </h:panelGrid>
                </p:tab>
                <p:tab title="External system">
                    <p:outputPanel id="technStatusPanel"
                                   rendered="#{subscriptionManager.selected.service.serviceType eq 'BROADBAND'}">
                        <h:panelGrid columns="2" style="margin-bottom: 10px;" columnClasses="lbl-column,data-column">
                            <f:facet name="header">Provisioned status</f:facet>
                            <h:outputLabel>Account Status</h:outputLabel>
                            <h:outputText
                                    value="#{not empty subscriptionManager.technicalStatus ? subscriptionManager.technicalStatus.getElement('BROADBAND_ACTIVE').value : 'N/A'}"></h:outputText>

                            <h:outputLabel>Access level</h:outputLabel>
                            <h:outputText
                                    value="#{not empty subscriptionManager.technicalStatus ? subscriptionManager.technicalStatus.getElement('BROADBAND_REDIRECT').value : 'N/A'}"></h:outputText>
                        </h:panelGrid>

                        <p:dataTable value="#{subscriptionManager.onlineStats}" var="stat" rowKey="#{stat.id}" rows="1"
                                     emptyMessage="User is offline">
                            <f:facet name="header">Online session</f:facet>
                            <p:column headerText="Start time">
                                <h:outputText value="#{stat.startTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="Duration">
                                <h:outputText value="#{stat.duration}"/>
                            </p:column>
                            <p:column headerText="Uploaded (MB)">
                                #{stat.up}
                            </p:column>
                            <p:column headerText="Downloaded (MB)">
                                #{stat.down}
                            </p:column>
                            <p:column headerText="Calling station ID">
                                #{stat.callingStationID}
                            </p:column>
                            <p:column headerText="NAS IP Address">
                                #{stat.nasIpAddress}
                            </p:column>
                            <p:column headerText="Framed IP Address">
                                #{stat.framedAddress}
                            </p:column>
                            <p:column headerText="Service">
                                #{stat.service}
                            </p:column>
                        </p:dataTable>
                        <p:panel style="margin-top: 10px;" columns="3">
                            <p:commandButton value="Refresh" icon="ui-icon-refresh"
                                             action="#{subscriptionManager.reloadSession}" update="technStatusPanel"/>
                            <p:commandButton value="Disconnect" icon="ui-icon-power"
                                             actionListener="#{subscriptionManager.disconnectSession}"
                                             update="technStatusPanel :sbForm:messages"/>
                            <p:commandButton value="Provision" icon="ui-icon-arrowthick-2-e-w"
                                             onclick="PF('provDialog').show(); return false;" id="reprovisionBtn2"/>
                        </p:panel>

                        <p:dataTable value="#{subscriptionManager.offlineStats}" var="offlinestat"
                                     rowKey="#{offlinestat.id}" rows="5"
                                     emptyMessage="No previous sessions found.">
                            <f:facet name="header">Offline sessions</f:facet>
                            <p:column headerText="Start time">
                                <h:outputText value="#{offlinestat.startTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="End time">
                                <h:outputText value="#{offlinestat.endTime}">
                                    <f:convertDateTime pattern="HH:mm:ss dd.MM.yyyy"/>
                                </h:outputText>
                            </p:column>
                            <p:column headerText="Uploaded (MB)">
                                #{offlinestat.up}
                            </p:column>
                            <p:column headerText="Downloaded (MB)">
                                #{offlinestat.down}
                            </p:column>
                            <p:column headerText="Calling station ID">
                                #{offlinestat.callingStationID}
                            </p:column>
                            <p:column headerText="NAS IP Address">
                                #{offlinestat.nasIpAddress}
                            </p:column>
                            <p:column headerText="Framed IP Address">
                                #{offlinestat.framedAddress}
                            </p:column>
                            <p:column headerText="Service">
                                #{offlinestat.service}
                            </p:column>
                        </p:dataTable>
                    </p:outputPanel>

                    <h:panelGrid columns="2" style="margin-bottom: 10px; border: 1px solid black;"
                                 columnClasses="lbl-column,data-column"
                                 id="usage" rendered="#{subscriptionManager.cityNet}">
                        <f:facet name="header">Usage</f:facet>

                        <p:outputLabel for="startDate" value="Start Date:"/>
                        <p:calendar id="startDate" value="#{subscriptionManager.usageStartDate}"/>

                        <p:outputLabel for="endDate" value="End Date:"/>
                        <p:calendar id="endDate" value="#{subscriptionManager.usageEndDate}"/>

                        <h:outputLabel>Download</h:outputLabel>
                        <h:outputText id="download_usage" value="#{subscriptionManager.usageDownload}"></h:outputText>

                        <h:outputLabel>Upload</h:outputLabel>
                        <h:outputText id="upload_usage" value="#{subscriptionManager.usageUpload}"></h:outputText>

                        <p:commandButton id="UsageGetBtn" value="get" icon="ui-icon-refresh"
                                         action="#{subscriptionManager.getUsage}" update="download_usage upload_usage"
                                         process="@this endDate startDate download_usage upload_usage"/>

                    </h:panelGrid>

                    <p:blockUI block="usage" trigger="UsageGetBtn"/>
                </p:tab>
                <p:tab id="tabVAS" title="Value Added Services">
                    <p:panelGrid id="sbnVASGrid" columns="3" style="margin-top: 10px; margin-bottom: 10px;"
                    >
                        <f:facet name="header">Search for VAS</f:facet>
                        <p:outputPanel>
                            <h:panelGrid columns="3">
                                <h:outputLabel value="Type"/>
                                <p:selectOneMenu value="#{subscriptionManager.sbnVASType}" id="sbnVASType">
                                    <f:ajax listener="#{subscriptionManager.searchSbnVAS}" render="sbnVASTable"/>
                                    <f:selectItem noSelectionOption="true" itemLabel="Select type"/>
                                    <f:selectItems value="#{subscriptionManager.sbnVASTypeList}"/>
                                </p:selectOneMenu>
                            </h:panelGrid>
                        </p:outputPanel>
                        <p:outputPanel>
                            <h:panelGrid columns="2">
                                <h:outputLabel value="Name"/>
                                <h:inputText id="sbnVASName" value="#{subscriptionManager.filterSvbVASName}"
                                             style="width: 215px;">
                                    <f:ajax listener="#{subscriptionManager.searchSbnVAS}" render="sbnVASTable"/>
                                </h:inputText>
                            </h:panelGrid>
                        </p:outputPanel>
                        <p:outputPanel>
                            <h:panelGrid columns="2">
                                <h:outputLabel value="Status"/>
                                <p:selectOneMenu value="#{subscriptionManager.sbnVasStatus}">
                                    <f:ajax listener="#{subscriptionManager.searchSbnVAS}" render="sbnVASTable"/>
                                    <f:selectItem noSelectionOption="true" itemLabel="Select status"/>
                                    <f:selectItems value="#{subscriptionManager.sbnVasStatusList}"/>
                                </p:selectOneMenu>
                            </h:panelGrid>
                        </p:outputPanel>
                    </p:panelGrid>

                    <p:dataTable id="sbnVASTable" value="#{subscriptionManager.completeSbnVASList}" var="sbnVAS"
                                 rows="15" rowKey="#{sbnVAS.id}"
                                 selection="#{subscriptionManager.selectedSbnVAS}" selectionMode="single"
                                 editable="true" editMode="cell">
                        <p:ajax event="rowSelect"
                                update=":sbForm:accordionPanel:sbnVASBtnPanel"/>
                        <p:column headerText="Id">#{sbnVAS.id}</p:column>
                        <p:column headerText="Name">#{sbnVAS.vas.name}</p:column>
                        <p:column headerText="Price"
                                  rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'POSTPAID'}">#{sbnVAS.serviceFeeForView}</p:column>

                        <p:column headerText="Count">
                            <p:cellEditor>
                                <f:facet name="output"><h:outputText value="#{sbnVAS.count}"/></f:facet>
                                <f:facet name="input">
                                    <p:inputText value="#{sbnVAS.count}" style="width:40px; margin-left: 30%"/>
                                </f:facet>
                            </p:cellEditor>
                        </p:column>

                        <p:column headerText="Remaing">#{sbnVAS.remainCount > 1 ? sbnVAS.remainCount : -1}</p:column>

                        <p:column headerText="Type" rendered="false">#{sbnVAS.vas.code.type}</p:column>
                        <p:column headerText="Code">#{sbnVAS.vas.code.name}</p:column>
                        <p:column headerText="Price">#{sbnVAS.vas.priceInDouble}</p:column>
                        <p:column
                                headerText="Resource">#{not empty sbnVAS.resource ? sbnVAS.resource.bucketList.get(0).capacity :''}</p:column>

                        <p:column headerText="Status">#{sbnVAS.status}</p:column>
                        <p:column headerText="Activation date">
                            <h:outputText
                                    value="#{not empty sbnVAS.activeFromDate ? sbnVAS.activeFromDate.toDate() : ''}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Expiration date"
                                  rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'PREPAID'}">
                            <h:outputText value="#{sbnVAS.expirationDateAsDate}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Last Update Date"
                                  rendered="#{subscriptionManager.selected.subscriber.lifeCycle eq 'PREPAID'}">
                            <h:outputText value="#{sbnVAS.lastUpdateDate.toDate()}">
                                <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                            </h:outputText>
                        </p:column>
                    </p:dataTable>

                    <p:outputPanel id="sbnVASBtnPanel">
                        <p:commandButton value="View" actionListener="#{subscriptionManager.showVASDetails}"
                                         onclick="PF('sbnVASDetailsDialog').show(); return false;"
                                         rendered="#{not empty subscriptionManager.selectedSbnVAS}"/>
                        <p:menuButton value="Action"
                                      rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">
                            <p:menuitem value="Add" onclick="PF('vasDialog').show(); return false;"
                                        update=":sbForm:messages"/>
                            <p:menuitem value="Remove" actionListener="#{subscriptionManager.removeVAS}"
                                        update="sbnVASTable :sbForm:messages sbnVASBtnPanel"/>
                        </p:menuButton>
                        <p:commandButton value="Reset" actionListener="#{subscriptionManager.resetVAS}"
                                         update="sbnVASTable sbnVASGrid :sbForm:messages sbnVASBtnPanel"/>
                    </p:outputPanel>
                </p:tab>

            </p:accordionPanel>
            <p:separator/>
            <h:panelGrid columns="2" style="margin-top: 10px;">
                <p:button outcome="/admin.xhtml" value="Cancel"/>
                <p:commandButton action="#{subscriptionManager.save()}" update="@form messages" value="Save"
                                 rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">
                    <p:confirm header="Confirm operation" message="Do you really want to perform this operation?"
                               icon="ui-icon-alert"/>
                </p:commandButton>
                <p:confirmDialog global="true" closeOnEscape="true">
                    <p:commandButton value="Yes" type="button" icon="ui-icon-check" styleClass="ui-confirmdialog-yes"/>
                    <p:commandButton value="No" type="button" icon="ui-icon-close" styleClass="ui-confirmdialog-no"/>
                </p:confirmDialog>
                <p:blockUI block=":sbForm" widgetVar="blockUIGeneral">
                    <h:outputLabel style="font-weight: bold; font-size: 12px !important;"
                                   value="Requesting, please wait..."/><br/><br/>
                    <p:graphicImage value="/resources/img/loading.gif"/>
                </p:blockUI>


                <!--
                                <form action="http://10.13.166.19/addticket" method="post" target="_blank">
                                    <input type="hidden" name="user" value="bo"/>
                                    <input type="hidden" name="key" value="40f98e4e7ee3ded6936e7a89940346023569568f32510cac953cffea6e4a44db"/>
                                    <input type="hidden" name="contract_id" value="agr"/>
                                    <input type="submit" value="Create TT"/>
                                </form>
                -->
            </h:panelGrid>

            <p:dialog id="jobDesc" header="Job Description" widgetVar="jobDesc" hideEffect="bounce" width="300"
                      dynamic="true">
                <p:panelGrid>
                    <p:row>
                        <p:column>
                            <h:outputLabel value="Job Id"/>
                        </p:column>
                        <p:column>
                            <h:outputText value="#{subscriptionManager.selectedJob.id}"/>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column>
                            <h:outputLabel value="Is Counter?"/>
                        </p:column>
                        <p:column>
                            <h:outputText value="#{subscriptionManager.selectedJob.counter}"/>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column colspan="2">
                            <p:dataTable value="#{subscriptionManager.selectedJob.propertyList}" var="property">
                                <p:column headerText="Job Details">
                                    <h:outputText value="#{property}" converter="#{jobPropertyConverter}"/>
                                </p:column>
                            </p:dataTable>
                        </p:column>
                    </p:row>
                </p:panelGrid>
            </p:dialog>

            <p:dialog position="center" widgetVar="eqChangeDialog" id="eqDialog" closable="true" closeOnEscape="true"
                      maximizable="false"
                      width="1130" showEffect="explode" resizable="false">
                <f:facet name="header">Equipment search</f:facet>

                <p:outputPanel id="minipopChangePanel"
                               rendered="#{not empty subscriptionManager.selected.getSettingByType('BROADBAND_SWITCH') and uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}">

                    <p:dataTable value="#{subscriptionManager.minipopList}" var="mp" paginator="true" rows="10"
                                 filteredValue="#{subscriptionManager.filteredMinipopList}"
                                 selection="#{subscriptionManager.selectedMiniPop}" selectionMode="single"
                                 rowKey="#{mp.id}" id="minipopChangeTable"
                                 rendered="#{not empty subscriptionManager.selected.getSettingByType('BROADBAND_SWITCH') and uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"
                    >
                        <f:facet name="header">Minipops</f:facet>
                        <p:column headerText="Id" styleClass="id" filterMatchMode="contains" filterBy="#{mp.id}">
                            <h:outputText value="#{mp.id}"/>
                        </p:column>
                        <p:column headerText="Category" style="width: 60px;">#{mp.category}</p:column>
                        <p:column headerText="Device status" style="width: 50px;">
                            #{mp.deviceStatus}
                        </p:column>
                        <p:column headerText="Switch" style="width: 60px;" filterMatchMode="contains"
                                  filterBy="#{mp.switch_id}">
                            <h:outputText value="#{mp.switch_id}"/>
                        </p:column>
                        <p:column headerText="Mac Address" style="width: 60px;" filterMatchMode="contains"
                                  filterBy="#{mp.mac}">
                            <h:outputText value="#{mp.mac}"/>
                        </p:column>
                        <p:column headerText="IP Address" style="width: 60px;" filterMatchMode="contains"
                                  filterBy="#{mp.ip}">
                            <h:outputText value="#{mp.ip}"/>
                        </p:column>
                        <p:column headerText="Address" style="width: 150px;" filterMatchMode="contains"
                                  filterBy="#{mp.address}">
                            <h:outputText value="#{mp.address}"/>
                        </p:column>
                        <p:column headerText="Block" style="width: 50px;" filterMatchMode="contains"
                                  filterBy="#{mp.block}">
                            <h:outputText value="#{mp.block}"/>
                        </p:column>
                        <p:column headerText="House" style="width: 50px;" filterMatchMode="contains"
                                  filterBy="#{mp.housesAsText}">
                            <h:outputText value="#{mp.housesAsText}"/>
                        </p:column>
                        <p:column headerText="Ports number" styleClass="id">#{mp.numberOfPorts}</p:column>
                        <p:column headerText="Next port" styleClass="id">
                            <h:inputText value="#{mp.nextAvailablePortHintAsNumber}" style="width: 20px;">
                            </h:inputText>
                        </p:column>
                    </p:dataTable>
                    <h:panelGrid columns="2">
                        <p:commandButton value="Select" update="messages"
                                         action="#{subscriptionManager.onSelectMinipop}"
                                         onclick="PF('eqChangeDialog').hide();"/>
                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>

            <p:dialog position="center" widgetVar="jobEditDialog" id="jobEditDialog" closable="true"
                      closeOnEscape="true"
                      maximizable="false"
                      width="320" showEffect="explode" resizable="false" header="Job Editor" dynamic="true">
                <p:panelGrid columns="2" columnClasses="lbl-column,data-column">
                    <h:outputLabel value="Execution Date"/>
                    <p:calendar value="#{subscriptionManager.selectedJob.startTime}" pattern="MM/dd/yyyy hh:mm:ss a"
                                navigator="true" styleClass="small-calendar" converter="dateTimeConverter"/>
                </p:panelGrid>
                <h:panelGrid columns="2">
                    <p:commandButton value="Update" update="messages"
                                     action="#{subscriptionManager.onEditJob}"
                                     oncomplete="PF('jobEditDialog').hide();"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog closeOnEscape="true" closable="true" maximizable="false" width="700" widgetVar="addendumUpload">
                <f:facet name="header">
                    Upload addendums
                </f:facet>
                <p:fileUpload mode="advanced" multiple="true"
                              fileUploadListener="#{subscriptionManager.handleAddendumUpload}"/>
            </p:dialog>

            <p:dialog id="unbilledDialogId" widgetVar="unbilledDialog" width="700">
                <f:facet name="header">Unbilled Charges</f:facet>
                <p:dataTable var="charge" value="#{subscriptionManager.unbilledCharges}" id="unbilledTableId">
                    <p:column headerText="Name">
                        <h:outputText value="#{charge.name}"/>
                    </p:column>
                    <p:column headerText="Price">
                        <h:outputText value="#{charge.price}"/>
                    </p:column>
                    <p:column headerText="Count">
                        <h:outputText value="#{charge.count}"/>
                    </p:column>
                    <p:column headerText="Total">
                        <h:outputText value="#{charge.total}"/>
                    </p:column>
                    <p:column headerText="Remaining days">
                        <h:outputText value="#{charge.remainingDaysStr}"/>
                    </p:column>
                </p:dataTable>
            </p:dialog>

            <p:dialog id="vasDialog" widgetVar="vasDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onVASDIalogHide}" update="vasDialog"/>


                <p:dataTable value="#{subscriptionManager.allowedVasList}"
                             selection="#{subscriptionManager.selectedVAS}"
                             selectionMode="single"
                             var="srv"
                             rowKey="#{srv.id}"
                             rows="10"
                             paginator="true"
                             id="allowedVasList">
                    <f:facet name="header">Value Added Services</f:facet>
                    <p:column headerText="Name" sortBy="#{srv.name}" filterBy="#{srv.name}"
                              filterMatchMode="contains">#{srv.name}</p:column>
                    <p:column headerText="Type">#{srv.code.type}</p:column>
                    <p:column headerText="Price">#{srv.priceInDouble}</p:column>

                    <p:column headerText="Value"
                              rendered="#{srv.provider.id eq subscriptionManager.qutuProviderId and srv.staticIp and srv.staticIPType eq subscriptionManager.normalCharged}">
                        <p:selectOneMenu id="ip" value="#{subscriptionManager.chargedIpAddressString}"
                                         style="width:125px">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>
                    </p:column>

                    <p:column headerText="Value"
                              rendered="#{srv.provider.id eq subscriptionManager.qutuProviderId and srv.staticIp and srv.staticIPType eq subscriptionManager.commendantFree}">
                        <p:selectOneMenu id="ipFree" value="#{subscriptionManager.freeIpAddressString}"
                                         style="width:125px">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>
                    </p:column>
                </p:dataTable>

                <p:blockUI block=":sbForm" trigger="vasDialogSaveBtn" widgetVar="blockui">
                    <h:outputLabel style="font-weight: bold; font-size: 12px !important;"
                                   value="Requesting, please wait..."/><br/><br/>
                    <p:graphicImage value="/resources/img/loading.gif"/>
                </p:blockUI>

                <h:panelGrid columns="2">
                    <p:outputLabel value="Count:"/>

                    <p:inplace>
                        <f:facet name="output">
                            <h:inputText value="#{subscriptionManager.vasAddCount}" disabled="true"
                                         style="width: 50px"/>
                        </f:facet>
                        <f:facet name="input">
                            <p:inputText value="#{subscriptionManager.vasAddCount}" style="width: 50px"/>
                        </f:facet>
                    </p:inplace>

                    <h:outputLabel value="VAS expiration date" for="expireDate"/>
                    <p:calendar id="expireDate" value="#{subscriptionManager.vasExpirationDate}"
                                pattern="MM/dd/yyyy"/>

                </h:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.addVas}" id="vasDialogSaveBtn" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     onstart="PF('vasDialog').hide(); PF('blockui').show();"
                                     oncomplete="PF('blockui').hide();"
                                     update=":sbForm:accordionPanel:sbnVASTable :sbForm:messages"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog id="sbnVASDetailsDialog" dynamic="true"
                      widgetVar="sbnVASDetailsDialog" closeOnEscape="true" closable="true" maximizable="false"
                      width="840" showEffect="explode">
                <f:facet name="header">Value Added Service Details</f:facet>
                <p:outputPanel id="oneTimeVAS"
                               rendered="#{not empty subscriptionManager.selectedSbnVAS and subscriptionManager.selectedSbnVAS.vas.code.type eq 'ONETIME_VARIABLE_CHARGE'}">
                    <p:dataTable value="#{subscriptionManager.selectedSbnVAS.settings}" var="vasSet">
                        <p:column headerText="Type">#{vasSet.name}</p:column>
                        <p:column headerText="Price">#{vasSet.value}</p:column>
                        <p:column headerText="Length">#{vasSet.length}</p:column>
                        <p:column headerText="Subtotal">#{vasSet.totalForView}</p:column>
                        <f:facet name="footer">
                            <h:outputText value="Total: #{subscriptionManager.selectedSbnVAS.vas.total} AZN"/>
                        </f:facet>
                    </p:dataTable>
                </p:outputPanel>
                <p:outputPanel id="prStatVAS"
                               rendered="#{not empty subscriptionManager.selectedSbnVAS and subscriptionManager.selectedSbnVAS.vas.code.type eq 'PERIODIC_STATIC'}">
                    <p:panelGrid columns="2" columnClasses="lbl-column,data-column" id="statVASPanel"
                                 >
                        <f:facet name="header">#{subscriptionManager.selectedSbnVAS.vas.name}</f:facet>
                        <h:outputLabel value="Id"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.id}"/>

                        <h:outputLabel value="Name"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.name}"/>

                        <h:outputLabel value="Code"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.code.name}"/>

                        <h:outputLabel value="Type"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.vas.code.type}"/>

                        <h:outputLabel value="Status"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.status}"/>

                        <h:outputLabel value="Activation date"/>
                        <h:outputText
                                value="#{not empty subscriptionManager.selectedSbnVAS.activeFromDate ? subscriptionManager.selectedSbnVAS.activeFromDate.toDate() : ''}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Expiration date"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.expirationDateAsDate}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Date"/>
                        <h:outputText value="#{subscriptionManager.selectedSbnVAS.lastUpdateDate.toDate()}">
                            <f:convertDateTime pattern="dd.MM.yyyy HH:mm:ss"/>
                        </h:outputText>

                        <h:outputLabel value="Resource"/>
                        <h:outputText id="vasResource"
                                      value="#{not empty subscriptionManager.selectedSbnVAS.resource ? subscriptionManager.selectedSbnVAS.resource.bucketList.get(0).capacity :''}"/>

                        <h:outputLabel value="IP"
                                       rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.qutuProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.normalCharged}"/>
                        <p:selectOneMenu id="ipEdit" value="#{subscriptionManager.chargedIpAddressString}"
                                         style="width:125px"
                                         rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.qutuProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.normalCharged}">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>

                        <h:outputLabel value="IP"
                                       rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.qutuProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.commendantFree}"/>
                        <p:selectOneMenu id="ipEditFree" value="#{subscriptionManager.freeIpAddressString}"
                                         style="width:125px"
                                         rendered="#{subscriptionManager.selectedSbnVAS.vas.provider.id eq subscriptionManager.qutuProviderId and subscriptionManager.selectedSbnVAS.vas.staticIp and subscriptionManager.selectedSbnVAS.vas.staticIPType eq subscriptionManager.commendantFree}">
                            <f:selectItem noSelectionOption="true" itemLabel="Select One" itemValue="#{null}"/>
                            <f:selectItems value="#{subscriptionManager.freeIpList}" var="ip"
                                           itemValue="#{ip.addressAsString}" itemLabel="#{ip.addressAsString}"/>
                        </p:selectOneMenu>

                    </p:panelGrid>
                    <p:commandButton value="Edit" actionListener="#{subscriptionManager.editVAS}"
                                     rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"
                                     update=":sbForm:vasResource :sbForm:statVASPanel"
                    />
                </p:outputPanel>
            </p:dialog>

            <p:dialog id="statusChangeDialog" widgetVar="statusChangeDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode" dynamic="true">
                <f:facet name="header">Status change details</f:facet>
                <p:panelGrid columns="2" columnClasses="lbl-column,data-column">
                    <h:outputLabel value="Start date"/>
                    <p:calendar value="#{subscriptionManager.statusChangeStartDate}" pattern="dd/MM/yyyy HH:mm:ss"
                                navigator="true" styleClass="small-calendar"/>

                    <h:outputLabel value="Apply Reversal on the End date"
                                   rendered="#{not empty subscriptionManager.selectedStatus and subscriptionManager.selectedStatus ne 'FINAL'}"/>
                    <p:selectBooleanCheckbox value="#{subscriptionManager.applyReversalEndDate}"
                                             rendered="#{not empty subscriptionManager.selectedStatus and subscriptionManager.selectedStatus ne 'FINAL'}"/>
                    <h:outputLabel value="End date"
                                   rendered="#{not empty subscriptionManager.selectedStatus and subscriptionManager.selectedStatus ne 'FINAL'}"/>
                    <p:calendar value="#{subscriptionManager.statusChangeEndDate}" pattern="dd/MM/yyyy HH:mm:ss"
                                navigator="true"
                                rendered="#{not empty subscriptionManager.selectedStatus and subscriptionManager.selectedStatus ne 'FINAL'}"
                                styleClass="small-calendar"/>

                    <h:outputLabel value="Value Added Serice name"/>
                    <h:outputText
                            value="#{not empty subscriptionManager.statusChangeRule ? subscriptionManager.statusChangeRule.vas.name : '-'}"/>

                    <h:outputLabel value="Price"/>
                    <h:outputText
                            value="#{not empty subscriptionManager.statusChangeRule ? subscriptionManager.statusChangeRule.vas.priceInDouble: 0} AZN"/>
                </p:panelGrid>
                <p:commandButton value="Change status" actionListener="#{subscriptionManager.changeStatus}"
                                 oncomplete="PF('statusChangeDialog').hide();"
                                 update=":sbForm:accordionPanel:sbnInfo :sbForm:messages"
                                 rendered="#{uISecurityManager.securityManager.checkUIPermissions('Subscription', 'UPDATE')}"/>
            </p:dialog>

            <p:dialog id="serviceChangeDialog" widgetVar="serviceChangeDialog" closeOnEscape="true"
                      closable="true" maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onServiceChangeDialogClose}"
                        update="serviceChangeDialog"/>
                <p:panelGrid columns="2" id="servicePanel" rowClasses="odd-row,even-row" styleClass="small-input">
                    <f:facet name="header">Search for Services</f:facet>
                    <p:outputPanel>
                        <p:panelGrid columns="2" columnClasses="search-lbl-column, search-data-column"
                                     rowClasses="odd-row,even-row">
                            <h:outputLabel value="Id"/>
                            <h:inputText value="#{subscriptionManager.filterServiceID}">
                                <f:ajax listener="#{subscriptionManager.onServiceSearch}" render="serviceList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:outputPanel>
                        <p:panelGrid columns="2" columnClasses="search-lbl-column, search-data-column"
                                     rowClasses="odd-row,even-row">
                            <h:outputLabel value="Name"/>
                            <h:inputText value="#{subscriptionManager.serviceName}">
                                <f:ajax listener="#{subscriptionManager.onServiceSearch}" render="serviceList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:commandButton value="Reset" actionListener="#{subscriptionManager.resetServiceList}"
                                     update="servicePanel serviceList"/>
                </p:panelGrid>

                <p:dataTable value="#{subscriptionManager.serviceList}"
                             selection="#{subscriptionManager.selectedService}" selectionMode="single"
                             var="srv" rowKey="#{srv.id}" rows="10" paginator="true" id="serviceList" lazy="true">
                    <f:facet name="header">Services</f:facet>
                    <p:column headerText="Id">#{srv.id}</p:column>
                    <p:column headerText="Name">#{srv.name}</p:column>
                    <p:column headerText="Type">#{srv.serviceType}</p:column>
                </p:dataTable>

                <h:panelGrid columns="2" rowClasses="odd-row,even-row" styleClass="small-input">
                    <h:outputLabel value="Apply future date" for="applyFutureDateId"/>
                    <p:selectBooleanCheckbox id="applyFutureDateId" value="#{subscriptionManager.applyFutureDate}">
                        <!--<p:ajax process="@this serviceList" update="futureDate"/>-->
                    </p:selectBooleanCheckbox>

                    <h:outputLabel value="Service change future date" for="futureDate"/>
                    <p:calendar id="futureDate" value="#{subscriptionManager.serviceChangeFutureDate}"
                                pattern="MM/dd/yyyy HH:mm:ss"/>
                </h:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.changeService}"
                                     oncomplete="PF('serviceChangeDialog').hide();" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     update=":sbForm:accordionPanel:tarifPanel :sbForm:accordionPanel:subResourcesTable :sbForm:messages">

                        <p:confirm header="Confirm operation"
                                   message="Service will be changed, do you really want to perform this operation?"
                                   icon="ui-icon-alert"/>
                    </p:commandButton>
                    <p:confirmDialog global="true" closeOnEscape="true">
                        <p:commandButton value="Yes" type="button" icon="ui-icon-check"
                                         styleClass="ui-confirmdialog-yes"/>
                        <p:commandButton value="No" type="button" icon="ui-icon-close"
                                         styleClass="ui-confirmdialog-no"/>
                    </p:confirmDialog>

                </h:panelGrid>
            </p:dialog>

            <p:dialog id="campDialog" widgetVar="campDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onCampaignDialogClosed}" update="campList"/>
                <p:panelGrid columns="1" id="campPanel">
                    <f:facet name="header">Search for Campaign</f:facet>
                    <p:outputPanel>
                        <p:panelGrid columns="2">
                            <h:outputLabel value="Name"/>
                            <h:inputText value="#{subscriptionManager.campaignName}" style="width: 415px;"
                                         onkeypress="return true;">
                                <f:ajax listener="#{subscriptionManager.onCampaignSearch}" render="campList"/>
                            </h:inputText>
                        </p:panelGrid>
                    </p:outputPanel>
                    <p:commandButton value="Reset" actionListener="#{subscriptionManager.resetCampaignList}"
                                     update="campPanel campList"/>
                </p:panelGrid>

                <p:dataTable value="#{subscriptionManager.availableCampaignList}"
                             selection="#{subscriptionManager.selectedCampaign}" selectionMode="single"
                             var="camp" rowKey="#{camp.id}" rows="10" paginator="true" id="campList" lazy="true"
                             editable="true" editMode="cell">
                    <f:facet name="header">Available campaigns List</f:facet>
                    <p:column headerText="Id" styleClass="id">#{camp.id}</p:column>
                    <p:column headerText="Name">#{camp.name}</p:column>
                    <p:column headerText="Type">#{camp.target}</p:column>
                    <p:column headerText="Description">#{camp.desc}</p:column>

                    <p:column headerText="Notes">
                        <p:cellEditor>
                            <f:facet name="output">
                                <h:outputText value="Click to enter notes"/>
                            </f:facet>
                            <f:facet name="input">
                                <p:inputText id="campaignNotes" value="#{subscriptionManager.campaignNotes}"
                                             style="width:96%"/>
                            </f:facet>
                        </p:cellEditor>
                    </p:column>
                </p:dataTable>

                <h:panelGrid columns="2">
                    <p:commandButton action="#{subscriptionManager.addCampaign}" id="campDialogSaveBtn" value="Save"
                                     rendered="#{uISecurityManager.hasPermission('Subscription', 'UPDATE')}"
                                     oncomplete="PF('campDialog').hide();"
                                     update=":sbForm:accordionPanel :sbForm:messages"/>
                </h:panelGrid>
            </p:dialog>

            <p:dialog id="provDialog" dynamic="true" widgetVar="provDialog" closeOnEscape="true" closable="true"
                      maximizable="false" width="840" showEffect="explode">
                <p:ajax event="close" listener="#{subscriptionManager.onProvisioningDialogClosed}" update="provDialog"/>
                <p:panelGrid columns="2" id="provPanel">
                    <f:facet name="header">Reason</f:facet>
                    <h:outputLabel value="Standard"/>
                    <p:selectOneMenu id="stdReason" value="#{subscriptionManager.provisioningReasonStandard}"
                                     >
                        <f:ajax event="change" render="provPanel"/>
                        <f:selectItem noSelectionOption="true" itemLabel="Select a reason"/>
                        <f:selectItem itemLabel="Channels or Internet did not open after payment"
                                      itemValue="Channels or Internet did not open after payment"/>
                        <f:selectItem itemLabel="Channels ot Internet unexpectedly stopped workinng"
                                      itemValue="Channels or Internet unexpectedly stopped workinng"/>
                        <f:selectItem itemLabel="Other reason" itemValue="Other reason"/>
                    </p:selectOneMenu>

                    <h:outputLabel value="Other"
                                   rendered="#{subscriptionManager.provisioningReasonStandard eq 'Other reason'}"/>
                    <h:inputText id="otherReason" value="#{subscriptionManager.provisioningReason}"
                                 style="width: 600px;"
                                 binding="#{subscriptionManager.provisioiningReasonOtherInput}"
                                 rendered="#{subscriptionManager.provisioningReasonStandard eq 'Other reason'}"
                                 validator="#{subscriptionManager.validateReprovisioningReason}"/>
                </p:panelGrid>

                <h:panelGrid columns="2">
                    <p:commandButton actionListener="#{subscriptionManager.reprovision}" id="provDialogSaveBtn"
                                     value="Proceed"
                                     onstart="proceedWithProvDialog()"
                                     oncomplete="PF('blockUIGeneral').hide();"
                                     update=":sbForm:messages sbForm:accordionPanel:technStatusPanelTV sbForm:provPanel"/>
                </h:panelGrid>
            </p:dialog>

            <script type="text/javascript">
                function proceedWithProvDialog() {
                    if (jQuery('#sbForm\\:stdReason_input').val() || jQuery('#sbForm\\:otherReason').val()) {
                        PF('provDialog').hide();
                        PF('blockUIGeneral').show();
                    }
                }
            </script>
        </h:form>

        <p:dialog closeOnEscape="true" closable="true" maximizable="false" width="700" widgetVar="contractUpload">
            <f:facet name="header">
                Upload contract
            </f:facet>
            <h:form>
                <p:fileUpload mode="advanced" fileUploadListener="#{subscriptionManager.handleContractUpload}"/>
            </h:form>
        </p:dialog>

    </ui:define>
    <ui:define name="east">
        <h:form>
            <p:menu>
                <p:submenu label="Navigation" styleClass="disable-scroll">
                    <p:menuitem value="Offline stats" action="#{subscriptionManager.goToOfflineStats()}"/>
                    <p:menuitem value="Subscriber details" action="#{subscriptionManager.redirect()}"/>
                </p:submenu>
            </p:menu>

        </h:form>
    </ui:define>
</ui:composition>

</html>